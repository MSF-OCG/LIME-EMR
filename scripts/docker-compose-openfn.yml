networks:
  web:
    external: true

services:
  postgresql:
    env_file:
      - '${MSF_ENV_CONFIG_PATH}/.env'
    stop_grace_period: '3s'
    volumes:
      - "${SQL_SCRIPTS_PATH}/postgresql/create_openfn_db.sh:/docker-entrypoint-initdb.d/create_openfn_db.sh"
  migrations:
    platform: linux/x86_64/v8
    image: 'openfn/lightning:v2.10.10'
    command: ["/app/bin/lightning", "eval", "Lightning.Release.migrate"]
    env_file:
      - '${MSF_ENV_CONFIG_PATH}/.env'
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - ozone
      - web

  web:
    platform: linux/x86_64/v8
    image: 'openfn/lightning:v2.10.10'
    command: ["/app/bin/server"]
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_WEB_CPUS:-0}'
          memory: '${DOCKER_WEB_MEMORY:-0}'
    env_file:
      - '${MSF_ENV_CONFIG_PATH}/.env'
    environment:
      ADAPTORS_REGISTRY_JSON_PATH: /app/priv/adaptor_registry_cache.json
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgresql: 
        condition: service_started
    labels:
      traefik.enable: "true"
      traefik.http.routers.web.rule: "Host(`${OPENFN_HOSTNAME}`)"
      traefik.http.routers.web.entrypoints: "websecure"
      traefik.http.routers.web.tls: "true"
      traefik.http.services.web.loadbalancer.server.port: "${URL_PORT:-4000}"
    healthcheck:
      test: '${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:4000/health_check}'
      interval: '10s'
      timeout: '3s'
      start_period: '5s'
      retries: 3
    ports:
      - '${LIGHTNING_EXTERNAL_PORT:-${PORT:-4000}}:${URL_PORT:-4000}'
    networks:
      - ozone
      - web
    volumes:
      - $OPENFN_CONFIG_PATH/adaptor_registry_cache.json:/app/priv/adaptor_registry_cache.json

  worker:
    platform: linux/x86_64/v8
    image: 'openfn/ws-worker:latest'
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_WORKER_CPUS:-0}'
          memory: '${DOCKER_WEB_MEMORY:-0}'
    depends_on:
      web:
        condition: service_healthy
        restart: true
    env_file:
      - '${MSF_ENV_CONFIG_PATH}/.env'
    command: ['pnpm', 'start:prod', '-l', 'ws://web:${URL_PORT:-4000}/worker']
    restart: '${DOCKER_RESTART_POLICY:-unless-stopped}'
    stop_grace_period: '3s'
    expose:
      - '2222'
    networks:
      - ozone
      - web
